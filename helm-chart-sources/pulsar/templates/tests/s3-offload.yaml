{{- if .Values.enableTests }}
{{- if eq .Values.storageOffload.driver "aws-s3" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ template "pulsar.fullname" . }}-s3-test-file"
data:
  test.sh: |-
    #!/bin/sh

    set -e

    ADM_CMD=/pulsar/bin/pulsar-admin
    PERF_CMD=/pulsar/bin/pulsar-perf
    CLIENT_CMD=/pulsar/bin/pulsar-client
    TOPIC=public/default/offload
    SUBSCRIPTION=sub

    # Create subscription
    $ADM_CMD topics create-subscription -s $SUBSCRIPTION $TOPIC 

    # Publish enough messages to trigger offload
    $PERF_CMD produce -s 10 -r 200 -m 14000 $TOPIC 

    # Make sure some ledgers are offloaded
    $ADM_CMD topics stats-internal $TOPIC  | grep '"offloaded" : true'

    # Consume offload messages
    $CLIENT_CMD consume -n 14000 -s $SUBSCRIPTION $TOPIC 

    # Delete topic
    $ADM_CMD topics delete $TOPIC 
---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ .Release.Name }}-test-s3-offload"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
  - name: "{{ template "pulsar.fullname" . }}-test-admin-proxy-plain-text"
    image: "{{ .Values.image.bastion.repository }}:{{ .Values.image.bastion.tag }}"
    imagePullPolicy: {{ .Values.image.bastion.pullPolicy }}
    command: ["sh", "-c"]
    args:
    - >
          bin/apply-config-from-env.py conf/client.conf &&
          /pulsar/tests/test.sh
    env:
    - name: webServiceUrl
      value: http://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:8080/
    - name: brokerServiceUrl
      value: pulsar://{{ template "pulsar.fullname" . }}-{{ .Values.broker.component }}:6650/
    volumeMounts:
      - name: test-scripts
        mountPath: /pulsar/tests
    
  # Do not restart containers after they exit
  restartPolicy: Never
  volumes:
    - name: test-scripts
      configMap:
        name: "{{ template "pulsar.fullname" . }}-s3-test-file"
        defaultMode: 0744
{{- end }}
{{- end }}